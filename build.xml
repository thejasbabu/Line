<?xml version = "1.0"?>
<project name="Geometry" default="coverage" basedir=".">

    <property name = "project.name" value="Line" />
    <property name = "main.name" value = "Point"/>
    <property name = "package.name" value="com.thoughtworks.geometry" />

    <path id="cobertura.classpath">
        <fileset dir="lib/cobertura-2.1.1">
            <include name="cobertura*.jar" />
            <include name="lib/**/*.jar" />
        </fileset>
    </path>

    <taskdef classpathref="cobertura.classpath" resource="tasks.properties"/>

    <target name="build" depends="clean">
        <mkdir dir="out"/>
        <mkdir dir="instrumented"/>
        <mkdir dir="reports"/>
        <javac destdir="out" debug="true">
            <src path="src;test"/>
            <classpath>
                <pathelement location="lib/junit-4.11.jar"/>
                <pathelement location="lib/hamcrest-core-1.3.jar"/>
                <pathelement location="lib/cobertura-2.1.1.jar"/>
            </classpath>
        </javac>
    </target>

    <target name="instrument" depends="build">
        <delete file="cobertura.ser" />
        <delete dir="./instrumented"/>
        <cobertura-instrument todir="./instrumented">
            <ignore regex="org.slf4j.*"/>
            <fileset dir="./out">
                <include name="**/*.class"/>
                <exclude name="**/*Test*.class"/>
            </fileset>
        </cobertura-instrument>
    </target>

    <target name="clean" description="clean previous output directory">
        <delete dir="out"/>
        <delete dir="reports"/>
        <delete dir="instrumented"/>
        <delete file="cobertura.log"/>
        <delete file="cobertura.ser"/>
    </target>

    <target name="build-jar" depends="build">
        <jar destfile="lib/${project.name}.jar" basedir="out" excludes="**/Test.class">
            <manifest>
                <attribute name="Main-Class" value="${package.name}.${main.name}"/>
            </manifest>
        </jar>
    </target>

    <target name="run" depends="build-jar">
        <java fork="true" failonerror="yes" classname="${package.name}.${main.name}">
            <classpath>
                <path location="lib/${project.name}.jar"/>
            </classpath>
        </java>
    </target>

    <target name="runjUnit" depends="build">
        <junit printsummary="yes" haltonfailure="true" fork="true" forkmode="once">
            <classpath location="./instrumented"/>
            <classpath location="lib/junit-4.11.jar"/>
            <classpath location="lib/hamcrest-core-1.3.jar"/>
            <classpath location="out"/>
            <classpath refid="cobertura.classpath"/>
            <formatter type="xml"/>
            <batchtest todir="reports" fork="yes">
                <fileset dir="test">
                    <include name="**/*Test*.java"/>
                </fileset>
            </batchtest>
        </junit>
        <junitreport todir="reports">
            <fileset dir="reports">
                <include name="TEST-*.xml" />
            </fileset>
            <report format="frames" todir="reports"/>
        </junitreport>
    </target>

    <target name="coverage-report">
        <cobertura-report srcdir="src" destdir="reports" format="xml" />
    </target>

    <target name="summary-coverage-report">
        <cobertura-report srcdir="src" destdir="reports" format="summaryXml" />
    </target>

    <target name="alternate-coverage-report">
        <cobertura-report destdir="reports">
            <fileset dir="src">
                <include name="**/*.java"/>
            </fileset>
        </cobertura-report>
    </target>

    <target name="coverage" depends="build, instrument, runjUnit, coverage-report, summary-coverage-report, alternate-coverage-report"/>
</project>

